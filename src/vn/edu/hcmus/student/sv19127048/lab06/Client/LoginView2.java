package vn.edu.hcmus.student.sv19127048.lab06.Client;

import static javax.swing.JOptionPane.INFORMATION_MESSAGE;

import java.awt.Font;
import javax.swing.GroupLayout;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JPasswordField;
import javax.swing.JTextField;
import javax.swing.SwingConstants;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.WindowConstants;

/**
 * vn.edu.hcmus.student.sv19127048.lab06.Client<br> Created by 19127048 - Nguyen Duc Nam<br> Date
 * 1/6/2022 - 5:00 PM<br> Description: JDK16<br>
 */

public class LoginView2 extends JFrame {

  /**
   * Creates new form Login
   */
  public LoginView2() {
    initComponents();
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">
  private void initComponents() {

    loginPanel = new JPanel();
    usernameLabel = new JLabel();
    usernameTextField = new JTextField();
    passwordLabel = new JLabel();
    passwordTextField = new JPasswordField();
    loginButton = new JButton();
    registerButton = new JButton();

    setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);

    usernameLabel.setHorizontalAlignment(SwingConstants.CENTER);
    usernameLabel.setText("Username");

    usernameTextField.setHorizontalAlignment(JTextField.CENTER);

    passwordLabel.setHorizontalAlignment(SwingConstants.CENTER);
    passwordLabel.setText("Password");

    passwordTextField.setHorizontalAlignment(JTextField.CENTER);

    loginButton.setText("LOGIN");
    loginButton.addActionListener(e -> {
      String username = usernameTextField.getText();
      String password = passwordTextField.getText();
      if (username.isEmpty() || password.isEmpty()) {
        JOptionPane.showMessageDialog(
            null,
            "Username or Password is empty",
            "Empty field",
            INFORMATION_MESSAGE
        );
      } else {
        String account = String.format("%s - %s", username, password);
        ClientDAO clientDAO = new ClientDAO();
        if (clientDAO.isAccountExisted(account)) {
          new ClientView(username).renderClientView();
          dispose();

        } else {
          JOptionPane.showMessageDialog(
              null,
              "Account does not exist",
              "Invalid account",
              INFORMATION_MESSAGE
          );
        }
      }
    });

    registerButton.setFont(new Font("Segoe UI", 0, 10)); // NOI18N
    registerButton.setText("REGISTER");
    registerButton.addActionListener(e -> {
      String username = usernameTextField.getText();
      String password = passwordTextField.getText();
      if (username.isEmpty() || password.isEmpty()) {
        JOptionPane.showMessageDialog(
            null,
            "Username or Password is empty",
            "Empty field",
            INFORMATION_MESSAGE
        );
      } else {
        String account = String.format("%s - %s", username, password);
        ClientDAO clientDAO = new ClientDAO();
        if (clientDAO.isAccountExisted(account)) {
          JOptionPane.showMessageDialog(
              null,
              "Account already existed",
              "Existed account",
              INFORMATION_MESSAGE
          );
        } else {
          clientDAO.createAccount(account);
          JOptionPane.showMessageDialog(
              null,
              "Account successfully created. Now login again.",
              "successfully",
              INFORMATION_MESSAGE
          );
        }
      }
    });

    GroupLayout loginPanelLayout = new GroupLayout(loginPanel);
    loginPanel.setLayout(loginPanelLayout);
    loginPanelLayout.setHorizontalGroup(
        loginPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(loginPanelLayout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addGroup(loginPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(loginPanelLayout.createSequentialGroup()
                        .addComponent(usernameLabel, GroupLayout.PREFERRED_SIZE, 72, GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(usernameTextField, GroupLayout.PREFERRED_SIZE, 179, GroupLayout.PREFERRED_SIZE))
                    .addGroup(loginPanelLayout.createSequentialGroup()
                        .addComponent(passwordLabel, GroupLayout.PREFERRED_SIZE, 72, GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(loginPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addComponent(passwordTextField, GroupLayout.PREFERRED_SIZE, 179, GroupLayout.PREFERRED_SIZE)
                            .addGroup(loginPanelLayout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addGroup(loginPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                                    .addComponent(registerButton, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(loginButton, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                .addContainerGap(50, Short.MAX_VALUE))
    );
    loginPanelLayout.setVerticalGroup(
        loginPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(loginPanelLayout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(loginPanelLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(usernameLabel, GroupLayout.PREFERRED_SIZE, 32, GroupLayout.PREFERRED_SIZE)
                    .addComponent(usernameTextField, GroupLayout.PREFERRED_SIZE, 32, GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(loginPanelLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(passwordLabel, GroupLayout.PREFERRED_SIZE, 32, GroupLayout.PREFERRED_SIZE)
                    .addComponent(passwordTextField, GroupLayout.PREFERRED_SIZE, 32, GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(loginButton, GroupLayout.PREFERRED_SIZE, 36, GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(registerButton, GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                .addGap(41, 41, 41))
    );

    GroupLayout layout = new GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(loginPanel, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(loginPanel, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
    );

    pack();
  }// </editor-fold>

  /**
   * @param args the command line arguments
   */
  public static void main(String args[]) {
    /* Set the Nimbus look and feel */
    //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
    /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
     * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
     */
    try {
      for (UIManager.LookAndFeelInfo info : UIManager.getInstalledLookAndFeels()) {
        if ("Nimbus".equals(info.getName())) {
          UIManager.setLookAndFeel(info.getClassName());
          break;
        }
      }
    } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
      java.util.logging.Logger.getLogger(LoginView2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    //</editor-fold>

    /* Create and display the form */
    java.awt.EventQueue.invokeLater(() -> new LoginView2().setVisible(true));
  }

  // Variables declaration - do not modify
  private JButton loginButton;
  private JPanel loginPanel;
  private JLabel passwordLabel;
  private JPasswordField passwordTextField;
  private JButton registerButton;
  private JLabel usernameLabel;
  private JTextField usernameTextField;
  // End of variables declaration
}
